language: cpp

env:
  global:
    # Ubuntu version
    - LINUX_DIST=trusty
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # Global build options and C++ flags
    - CXX_FLAGS="-Wall -std=c++17"
    # Misc
    - RUN_TESTS=true
    - COVERAGE=false
    - CODECOV_TOKEN="983d6354-5618-4a1c-aaf2-ab5e285b0f67"

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: true
      compiler: gcc
      addons:
        apt:
          packages: &precise_latest_boost_packages
            - gcc-8
            - g++-8
            #- clang-6.0
            - valgrind
            - xorg-dev
            - lunarg-vulkan-sdk
          sources: &precise_latest_boost_sources
            - ubuntu-toolchain-r-test
            #- llvm-toolchain-trusty-6.0

before_install:
  # Combine global build options with OS/compiler-dependent options
  - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
  - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}

install:
  - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-6.0" CC="clang-6.0"; fi
  - if [ "$CXX" = "g++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="g++-8" CC="gcc-8"; fi
  - echo ${PATH}
  - echo ${CXX}
  - ${CXX} --version
  - ${CXX} -v
  - sudo pip install codecov
  #mkdir -p ${DEPS_DIR}/vulkan
  #- wget -O - "https://vulkan.lunarg.com/sdk/home#sdk/downloadConfirm/1.1.85.0/linux/vulkansdk-linux-x86_64-1.1.85.0.tar.gz" | tar -xz -C ${DEPS_DIR}/vulkan
  #- export PATH=${DEPS_DIR}/vulkan:${PATH}
  #- ls ${DEPS_DIR}/vulkan

  # Download and install recent cmake
  - |
    if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.12/cmake-3.12.3-Linux-x86_64.tar.gz"
      mkdir -p ${DEPS_DIR}/cmake
      travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi

script:
  # Build main and tests
  - mkdir -p build
  - cd build
  - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON .. 
  - make
  - ctest

after_install:
  - bash <(curl -s https://codecov.io/bash)